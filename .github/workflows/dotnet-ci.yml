name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: SonarCloud Scan Begin
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=onurkarakus_NexusConnect
          -Dsonar.organization=onurkarakus
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.cs.cobertura.reportsPaths=**/coverage.cobertura.xml

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run tests with code coverage
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: dotnet test NexusConnect.Core.Tests/NexusConnect.Core.Tests.csproj --configuration Release --no-build --settings coverlet.runsettings --collect "XPlat Code Coverage" --verbosity normal

    - name: Code Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:        
        filename: '**/coverage.cobertura.xml'
        fail_below_min: true
        thresholds: '80 70'

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report        
        path: '**/coverage.cobertura.xml'
    
  publish:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Create NuGet Package
        run: dotnet pack NexusConnect.Core/NexusConnect.Core.csproj --configuration Release

      - name: Push to NuGet
        run: dotnet nuget push "NexusConnect.Core/bin/Release/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json"