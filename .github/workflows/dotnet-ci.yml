name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: SonarCloud Scan Begin
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          /k:"onurkarakus_NexusConnect"
          /o:"onurkarakus"
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.cs.cobertura.reportsPaths=**/coverage.cobertura.xml

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run tests with code coverage
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: dotnet test NexusConnect.Core.Tests/NexusConnect.Core.Tests.csproj --configuration Release --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./coverage/

    - name: Code Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        # --- DEÐÝÞÝKLÝK BURADA: Arama yolunu tüm alt klasörleri içerecek þekilde güncelliyoruz ---
        filename: '**/coverage.cobertura.xml'
        fail_below_min: true
        thresholds: '80 70'

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        # --- DEÐÝÞÝKLÝK BURADA: Yüklenecek dosyanýn yolunu da güncelliyoruz ---
        path: '**/coverage.cobertura.xml'